// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CurrentWorkFlowExample.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("EndToEndUserFlows")]
    public partial class EndToEndUserFlowsFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "EndToEndUserFlows.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "EndToEndUserFlows", "\tIn order to test the different User flows on the Reebonz Website.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("The user should be able to see the correct payment options while checkout on Sing" +
            "apore site")]
        [NUnit.Framework.CategoryAttribute("prodSgUser")]
        [NUnit.Framework.CategoryAttribute("cancelItemCheckoutFromPaymentDetailsPage")]
        [NUnit.Framework.TestCaseAttribute("paypal", "https://www.reebonz.com.sg", new string[0])]
        [NUnit.Framework.TestCaseAttribute("card", "https://www.reebonz.com.sg", new string[0])]
        public virtual void TheUserShouldBeAbleToSeeTheCorrectPaymentOptionsWhileCheckoutOnSingaporeSite(string paymentMethod, string website, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "prodSgUser",
                    "cancelItemCheckoutFromPaymentDetailsPage"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The user should be able to see the correct payment options while checkout on Sing" +
                    "apore site", @__tags);
#line 6
this.ScenarioSetup(scenarioInfo);
#line 7
 testRunner.Given(string.Format("I am on the landing page of the {0} website", website), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 8
 testRunner.And("I sign in", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
 testRunner.When("go to a particular event and add a product to my cart", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 10
 testRunner.And(string.Format("proceed to buy an item using {0}", paymentMethod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
 testRunner.Then(string.Format("the user is able to procced to the payment page with paymentType {0}", paymentMethod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("The user should be able to see the correct payment options while checkout on Chin" +
            "a site")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("prodCnUser")]
        [NUnit.Framework.CategoryAttribute("cancelItemCheckoutFromPaymentDetailsPage")]
        [NUnit.Framework.TestCaseAttribute("union", "https://www.reebonz.cn/", new string[0])]
        [NUnit.Framework.TestCaseAttribute("alipay", "https://www.reebonz.cn/", new string[0])]
        public virtual void TheUserShouldBeAbleToSeeTheCorrectPaymentOptionsWhileCheckoutOnChinaSite(string paymentMethod, string website, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ignore",
                    "prodCnUser",
                    "cancelItemCheckoutFromPaymentDetailsPage"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The user should be able to see the correct payment options while checkout on Chin" +
                    "a site", @__tags);
#line 20
this.ScenarioSetup(scenarioInfo);
#line 21
 testRunner.Given(string.Format("I am on the landing page of the {0} website", website), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 22
 testRunner.And("I sign in", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
 testRunner.When("go to a particular event and add a product to my cart", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 24
 testRunner.And(string.Format("proceed to buy an item using {0}", paymentMethod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
 testRunner.Then(string.Format("the user is able to procced to the payment page with paymentType {0}", paymentMethod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
